name: Auto PR Creation

on:
  push:
    branches:


    branches-ignore:
      - 'main'
      - 'master'
      - 'release/**'

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create-draft-pr:
    if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip-ci]')
    runs-on: ubuntu-latest
    steps:
      - name: Get commit message and create PR
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BASE_BRANCH="dev"
          
          # Obtener el mensaje del último commit
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          
          # Limpiar el mensaje del commit (remover saltos de línea para el título)
          PR_TITLE=$(echo "$COMMIT_MESSAGE" | head -n1 | sed 's/^\[[^]]*\]//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          
          # Si el título está vacío, usar un título por defecto
          if [ -z "$PR_TITLE" ]; then
            PR_TITLE="Draft: $BRANCH_NAME"
          else
            PR_TITLE="Draft: $PR_TITLE"
          fi
          
          # Crear el cuerpo del PR con el mensaje completo del commit
          PR_BODY="**PR creado automáticamente**\n\n- Creado por: @$GITHUB_ACTOR\n- Rama: $BRANCH_NAME\n- Commit: ${{ github.event.head_commit.id }}\n- Estado: BORRADOR\n\n**Mensaje del commit:**\n\`\`\`\n$COMMIT_MESSAGE\n\`\`\`\n\n**Instrucciones:**\n1. Cambia la label a \"LISTO PARA VERIFICAR\" cuando esté listo\n2. Los revisores serán notificados automáticamente"

          echo "Creando PR con título: $PR_TITLE"
          echo "Rama origen: $BRANCH_NAME"
          echo "Rama destino: $BASE_BRANCH"

          # Crear PR en estado draft
          curl -s -L -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/$GITHUB_REPOSITORY/pulls \
            -d "{
              \"title\": \"$PR_TITLE\",
              \"head\": \"$BRANCH_NAME\",
              \"base\": \"$BASE_BRANCH\",
              \"body\": \"$PR_BODY\",
              \"draft\": true
            }" > pr_response.json

          # Obtener número del PR creado
          PR_NUMBER=$(jq -r '.number' pr_response.json)
          
          if [ "$PR_NUMBER" != "null" ]; then
            echo "PR creado exitosamente: #$PR_NUMBER"
            
          #   # Agregar label BORRADOR
          #   curl -s -L -X POST \
          #     -H "Authorization: token $GITHUB_TOKEN" \
          #     -H "Accept: application/vnd.github.v3+json" \
          #     -H "Content-Type: application/json" \
          #     https://api.github.com/repos/$GITHUB_REPOSITORY/issues/$PR_NUMBER/labels \
          #     -d '{"labels":["BORRADOR"]}'
              
          #   echo "✅ Label BORRADOR agregado al PR #$PR_NUMBER"
          # else
          #   echo "❌ Error al crear PR Pinche Wey:"
          #   cat pr_response.json
          #   exit 1
          # fi